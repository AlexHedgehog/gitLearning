GitHub
	AlexHedgehog
	alexQA27

=======
﻿Установка на Linux
	sudo apt-get install git


==========================
Настройка :
	указать своё имя (включено в коммит)
		git config --global user.name "alex_vb1"
	Указать свой email (включено в коммит)
		git config --global user.email bad.student@mail.ru
		
	Указать программу сравнения версий:
		git config --global merge.tool vimdiff		
		
		
	Проверка настроек:
		git config --list
===================================		
		
==================================
Создать директорию проекта:
	создать папку с проектом
	

Создание репозитория проекта:
	перейти в папку с проектом
	выполнить инициацию папки:
		git init
================================


Проверка статуса (состояния) файлов git-репозитория
	git status

Посмотреть изменения
	git diff
	
	
=====================================

Подключение к удаленному репозиторию: https://github.com/AlexHedgehog/gitLearning
	git remote add origin https://github.com/AlexHedgehog/gitLearning
		где "origin" - имя локального репозитория, может быть любым

Клонировать себе ветку:
	git clone https://github.com/AlexHedgehog/gitLearning

Проверка списка удалённых репозиториев:
	git remote -v
=====================================


===========
Добавить в отслеживание (подготовка к коммиту)
Для отслеживания файла/ов его нужно добавить в коммит:
	один файл:
		git add file_name
	
	добавить файлы по маске (например все файлы с расширением .txt)
		git add *.txt
		
	всё содержимое каталога:
		git add -A
	
Для удаления файлов из отслеживания нужно выполнить:
	git rm --cached file_name
	git reset HEAD <файл>
	
Убить все изменения в модифицированном файле (откатить файл до предыдущей версии)
	git checkout -- file_name
===========

===========
Перемещение (переименование) файлов внутри отслеживаемого репозитория
	git mv file_from file_to


===========
Подготовка коммита
	git commit -m "Comment fo commit" -a
	
	Добавить в последний коммит
		git commit --amend
	
===========

Отправка коммита в ветку
	git push origin master
		origin - локальный репозиторий (псевдоним) указанный при подключении удалённого репозитория

===========

История коммитов
	git log -p -2
		-p - для отображения разницы (выход :q)
		-2 - количество отображаемых коммитов (в данном случае 2)
	
Детали коммита
	git show начальный_кусок_номера_коммита

===========
Управление ветвями
	Доступные ветки (зелёным - глобальные ветки, звёздочкой текущая):
		git branch -a
			где "-a" - опция показать все ветки
	
	
	Создание ветки с переключением на неё:
		git checkout -b new_branch_name
			где "-b" - создать ветку и переключиться на неё
	
	
	Переключение на ветку:
		git checkout имя_ветки_куда_уходим
		
	
	Объединение веток:
		git merge develop --no-ff
			
		


получение (pull)


add master 1
=======
получение (push)


test develop 1
test develop 2

